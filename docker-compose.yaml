# containers created as "beima_database_1", "beima_api_1", "beima_web_1", "beima_minio_1"
# they should be able to communicate by referencing the container name, i.e. calling the api should be as easy as:
# http://beima_api_1/api/<endpoint>
# get container address sudo docker inspect beima_api_1 | grep \"IPAddress\"
# this will need additional cleanup and configuration added
version: '2.0'
services:
  web:
    restart: always
    build:
      context: .
      dockerfile: ./BEIMA.Client/Dockerfile
    ports:
      - "3000"
    networks:
     - internal
    #configs:
    #  - httpd-config
    #secrets:
    #  - server-certificate

  database:
    image: mongo
    ports:
      - "27017"
    #volumes:
    #  - db-data:/data
    networks:
      - internal

  api:
    build:
      context: .
      dockerfile: ./BEIMA.Backend/Dockerfile
    ports:
    #port 7071 on the host is mapped to port 7071 on the container. Requests get sent to "localhost:7071", or the host machines 7071, which is then routed to the container's 7071 port and the request is completed
      - "7071:7071"
    networks:
      - internal

  minio:
    restart: always
    image: minio/minio
    command: server /data
    #ports:
    networks:
      - internal

networks:
  # The presence of these objects is sufficient to define them
  internal: {}
